name: UpdatePR
on:
  pull_request:
    types: [opened, synchronize]

jobs:
  update-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Nécessaire pour obtenir tous les commits

      - name: Mise à jour du titre et de la description
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: |
          PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          COMMITS=$(gh pr view $PR_NUMBER --json commits --jq '.commits[].messageBody')
          TITLE=$(gh pr view $PR_NUMBER --json commits --jq '.commits[].messageHeadline' | tail -1)
          TITLE=${TITLE:0:256}
          DESCRIPTION=$(gh pr view $PR_NUMBER --json commits --jq '.commits[].messageBody')

          if [ -n "$TITLE" ]; then
            gh pr edit $PR_NUMBER --title "$TITLE" --body "$DESCRIPTION"
          else
            echo "Le titre est vide, la mise à jour du PR est annulée."
          fi

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44

      - name: Review code
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            review=$(curl -s http://82.64.133.182:11434/api/generate -d '{"model": "llama3", "prompt": "Effectue une revue de ce fichier en français:\n\n```\n$(cat $file)\n```", "stream": false}' | jq -r '.response')
            comment="Ollama Code Review for \`$file\`:\n\n$review"
            echo "$comment" >> ollama_review.txt
          done

          gh pr comment ${{ github.event.pull_request.number }} --body "$(cat ollama_review.txt)"
        shell: bash
